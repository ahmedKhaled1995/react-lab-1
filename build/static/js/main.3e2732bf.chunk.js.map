{"version":3,"sources":["components/Header.jsx","LoginContext.js","hooks/usePosts.js","components/Post.jsx","components/Posts.jsx","components/Home.js","components/About.js","components/PostDetails.jsx","components/CreatePost.js","components/Auth.js","components/Guard.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","title","userName","className","to","LoginContext","createContext","userId","useTasks","initialTasks","auth","useContext","useState","posts","setPosts","getUserData","a","axios","get","userData","userPosts","data","Post","post","showLink","id","showBody","body","defaultProps","Posts","map","Home","usePosts","useEffect","About","PostDetails","setPost","postComments","setPostComments","fetch","match","params","then","response","json","catch","err","console","log","showButton","name","email","CreatePost","history","useHistory","setTitle","setBody","createPost","payload","push","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","Auth","setEmail","password","setPassword","login","userEmail","userPassword","user","username","handleLogin","Guard","children","App","setName","path","render","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e2732bf.chunk.js","sourcesContent":["import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\nimport \"./header.css\";\n\nconst Header = (props) => {\n\n    return (\n        <nav >\n            <h3>{props.title}</h3>\n            {props.userName ? <ul className=\"Nav-links\">\n                <Link to=\"/\"><li>Home</li></Link>\n                <Link to=\"/create\"><li>Create Post</li></Link>\n                <Link to=\"/about\"><li>About</li></Link>\n                <h3>{props.userName}</h3>\n            </ul> : \"\"}\n\n\n        </nav>\n    )\n}\n\nexport default Header;\n","import { createContext } from \"react\";\n\nconst LoginContext = createContext({\n    userName: null,\n    userId: 0,\n});\n\nexport default LoginContext;","import { useState, useContext } from \"react\";\nimport LoginContext from \"../LoginContext\";\n\nimport axios from \"axios\";\n\nconst useTasks = (initialTasks) => {\n    const auth = useContext(LoginContext);\n    const [posts, setPosts] = useState(initialTasks);\n\n    const getUserData = async () => {\n        const userId = auth.userId;\n        const userData = await axios.get(`https://jsonplaceholder.typicode.com/posts?userId=${userId}`);\n        const userPosts = userData.data\n        setPosts(userPosts);\n    };\n\n\n    return (\n        {\n            posts,\n            getUserData,\n        }\n    );\n}\n\nexport default useTasks;\n","import { Link } from \"react-router-dom\";\n\nconst Post = (props) => {\n    return (\n\n        <div>\n            <p>UserID: {props.post.userId}</p>\n            {props.showLink ? <Link to={`/posts/${props.post.id}`}><p>Title: {props.post.title}</p></Link> : <p>Title: {props.post.title}</p>}\n            {props.showBody ? <p>body: {props.post.body}</p> : \"\"}\n        </div>\n    )\n}\n\nPost.defaultProps = {\n    showBody: true,\n    showLink: true,\n};\n\n\nexport default Post;\n","import Post from \"./Post\";\n\nconst Posts = (props) => {\n\n    return (\n        <ul>\n            {props.posts.map((post) => {\n                return (\n                    <li key={post.id}>\n                        <Post post={post} showBody={false} showLink={true} /><hr />\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\nexport default Posts;\n","import { useEffect } from \"react\";\nimport usePosts from \"../hooks/usePosts\";\n\nimport Posts from \"./Posts\";\nimport Input from \"./Input\";\n\nconst Home = () => {\n\n    const { posts, getUserData } = usePosts([]);\n\n    useEffect(() => {\n        getUserData();\n    }, []);\n\n    return (\n        <div>\n            {/* <Input onSubmit={getUserData} /> */}\n            <Posts posts={posts}></Posts>\n        </div>\n    )\n}\n\nexport default Home;\n","const About = () => {\n    return (\n        <div>\n            <h3>About</h3>\n        </div>\n    )\n}\n\nexport default About;\n","import { useState, useEffect } from 'react'\nimport Post from './Post';\n\nconst PostDetails = (props) => {\n\n    const [post, setPost] = useState([]);\n    const [postComments, setPostComments] = useState([]);\n\n    useEffect(() => {\n        fetch(`https://jsonplaceholder.typicode.com/posts/${props.match.params.id}/comments`)\n            .then((response) => response.json())\n            .then((json) => setPostComments(json))\n            .catch((err) => {\n                console.log(\"No post\");\n                console.log(err);\n            });\n\n        fetch(`https://jsonplaceholder.typicode.com/posts/${props.match.params.id}`)\n            .then((response) => response.json())\n            .then((json) => {\n                setPost(json);\n            }).catch((err) => {\n                console.log(\"No post\");\n                console.log(err);\n            });\n\n    }, [props.match.params.id]);\n\n    return (\n        <div>\n            <Post post={post} showButton={false} showLink={false} />\n            <h2>Comments</h2>\n            {postComments.map((post) => {\n                return (<div key={post.id}>\n                    <p>name: {post.name}</p>\n                    <p>email: {post.email}</p>\n                    <p>body: {post.body}</p>\n                    <hr />\n                </div>)\n            })}\n        </div>\n    )\n}\n\nexport default PostDetails\n","import { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport LoginContext from \"../LoginContext\";\n\nconst CreatePost = () => {\n\n    const history = useHistory();\n    const [title, setTitle] = useState('');\n    const [body, setBody] = useState('');\n    const auth = useContext(LoginContext);\n\n    const createPost = async (title, body) => {\n        const payload = {\n            title,\n            body,\n            userId: auth.userId,\n        };\n        const data = await axios.post('https://jsonplaceholder.typicode.com/posts', payload);\n        const post = data.data;\n        // console.log(post);\n        history.push(`/posts/7`);\n    };\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!title || !body) {\n            alert('InvalidPpost!');\n            return;\n        }\n        await createPost(title, body)\n\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <input\n                    type='text'\n                    placeholder='Title...'\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n            </div>\n            <div className='form-control'>\n                <input\n                    type='textArea'\n                    placeholder='Body...'\n                    value={body}\n                    onChange={(e) => setBody(e.target.value)}\n                />\n            </div>\n            <input type='submit' value='Add Post' className='btn btn-block' />\n        </form>\n    )\n}\n\nexport default CreatePost;\n","import { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport LoginContext from \"../LoginContext\";\n\nconst Auth = (props) => {\n    const history = useHistory();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const auth = useContext(LoginContext);\n\n    const login = async (userEmail, userPassword) => {\n        const userData = await axios.get(`https://jsonplaceholder.typicode.com/users?email=${userEmail}`);\n        const user = userData.data[0];\n        if (!user) {\n            alert(\"Invalid User!\");\n        } else {\n            if (user.username !== userPassword) {\n                alert(\"Invalid Password!\");\n                return;\n            }\n            console.log(\"valid\");\n            auth.userName = user.username;\n            auth.userId = user.id;\n            props.handleLogin();\n            history.push('/');\n        }\n    };\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!email || !password) {\n            alert('Invalid Credintials!');\n            return;\n        }\n        await login(email, password)\n\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <input\n                    type='text'\n                    placeholder='Enter email...'\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n            </div>\n            <div className='form-control'>\n                <input\n                    type='password'\n                    placeholder='Enter email...'\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n            </div>\n            <input type='submit' value='Login' className='btn btn-block' />\n        </form>\n    )\n}\n\nexport default Auth;\n","import { useContext, Fragment } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport LoginContext from \"../LoginContext\";\n\nconst Guard = (props) => {\n    const auth = useContext(LoginContext);\n\n    return (\n        <Fragment>\n            {auth.userName ? props.children : <Redirect to=\"/login/\" />}\n        </Fragment>\n    )\n}\n\nexport default Guard;\n","import { useContext, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport PostDetails from \"./components/PostDetails\";\nimport CreatePost from \"./components/CreatePost\";\nimport Auth from \"./components/Auth\";\nimport Guard from \"./components/Guard\";\nimport LoginContext from \"./LoginContext\";\n\nimport './App.css';\n\nfunction App() {\n\n  const [name, setName] = useState(null);\n  const auth = useContext(LoginContext);\n\n  const handleLogin = () => {\n    setName(auth.userName);\n  };\n\n  return (\n    <Router>\n      <Header title={\"Blog Post\"} userName={name}></Header>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/login\" render={(props) => <Auth handleLogin={handleLogin} {...props} />} />\n          <Guard>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/create\" component={CreatePost} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/posts/:id\" component={PostDetails} />\n          </Guard>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}